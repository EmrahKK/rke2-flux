apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: minio
spec:
  releaseName: minio-release
  chart:
    spec:
      version: "8.0.10"
      chart: minio
      sourceRef:
        kind: HelmRepository
        name: emrahkk-github-io
  interval: 5m
  values:
    accessKey: "minioaccesskey"
    secretKey: "miniosecretkey"
    persistence:
      enabled: true
      ## A manually managed Persistent Volume and Claim
      ## Requires persistence.enabled: true
      ## If defined, PVC must be created manually before volume will be bound
      existingClaim: ""
      ## minio data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      ## Storage class of PV to bind. By default it looks for standard storage class.
      ## If the PV uses a different storage class, specify that here.
      storageClass: ""
      VolumeName: ""
      accessMode: ReadWriteOnce
      size: 5Gi
    ingress:
      enabled: true
      labels: {}
        # node-role.kubernetes.io/ingress: platform
      annotations:
        kubernetes.io/ingress.class: nginx
        cert-manager.io/cluster-issuer: "ca-cluster-issuer"
        # kubernetes.io/tls-acme: "true"
        # kubernetes.io/ingress.allow-http: "false"
        # kubernetes.io/ingress.global-static-ip-name: ""
        # nginx.ingress.kubernetes.io/secure-backends: "true"
        # nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        # nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
      path: /
      hosts:
        - minio.tav.dev
      tls:
       - secretName: minio-general-tls
         hosts:
           - minio.tav.dev
    metrics:
      # Metrics can not be disabled yet: https://github.com/minio/minio/issues/7493
      serviceMonitor:
        enabled: true
        additionalLabels: {}
        relabelConfigs: {}
        # namespace: monitoring
        # interval: 30s
        # scrapeTimeout: 10s
