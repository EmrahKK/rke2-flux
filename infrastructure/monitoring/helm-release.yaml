apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: monitoring
spec:
  releaseName: monitoring
  chart:
    spec:
      version: "42.1.0"
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
  interval: 5m
  values:
    prometheus:
      ingress:
        enabled: true

        # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
        # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
        ingressClassName: nginx

        annotations:
          cert-manager.io/cluster-issuer: "ca-cluster-issuer"          
        labels: {}

        ## Redirect ingress to an additional defined port on the service
        # servicePort: 8081

        ## Hostnames.
        ## Must be provided if Ingress is enabled.
        ##
        # hosts:
        #   - prometheus.domain.com
        hosts:
          - prometheus.tav.dev

        ## Paths to use for ingress rules - one path should match the prometheusSpec.routePrefix
        ##
        paths: []
        # - /

        ## For Kubernetes >= 1.18 you should specify the pathType (determines how Ingress paths should be matched)
        ## See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#better-path-matching-with-path-types
        # pathType: ImplementationSpecific

        ## TLS configuration for Prometheus Ingress
        ## Secret must be manually created in the namespace
        ##
        tls:
          - secretName: prometheus-general-tls
            hosts:
              - prometheus.tav.dev
    alertmanager:
      ingress:
          enabled: true
          # For Kubernetes >= 1.18 you should specify the ingress-controller via the field ingressClassName
          # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress
          ingressClassName: nginx
          annotations: 
            cert-manager.io/cluster-issuer: "ca-cluster-issuer"
          labels: {}
          ## Redirect ingress to an additional defined port on the service
          # servicePort: 8081
          ## Hosts must be provided if Ingress is enabled.
          ##
          hosts:
             - alertmanager.tav.dev
          ## Paths to use for ingress rules - one path should match the alertmanagerSpec.routePrefix
          ##
          paths: []
          # - /
          ## For Kubernetes >= 1.18 you should specify the pathType (determines how Ingress paths should be matched)
          ## See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#better-path-matching-with-path-types
          # pathType: ImplementationSpecific
          ## TLS configuration for Alertmanager Ingress
          ## Secret must be manually created in the namespace
          ##
          tls:
            - secretName: alertmanager-general-tls
              hosts:
              - alertmanager.tav.dev  
    grafana:
      ingress:
        ## If true, Grafana Ingress will be created
        ##
        enabled: true

        ## IngressClassName for Grafana Ingress.
        ## Should be provided if Ingress is enable.
        ##
        ingressClassName: nginx

        ## Annotations for Grafana Ingress
        ##
        annotations:
          cert-manager.io/cluster-issuer: "ca-cluster-issuer"
          # kubernetes.io/ingress.class: nginx
          # kubernetes.io/tls-acme: "true"

        ## Labels to be added to the Ingress
        ##
        labels: {}

        ## Hostnames.
        ## Must be provided if Ingress is enable.
        ##
        # hosts:
        #   - grafana.domain.com
        hosts:
          - grafana.tav.dev

        ## Path for grafana ingress
        path: /

        ## TLS configuration for grafana Ingress
        ## Secret must be manually created in the namespace
        ##
        tls:
        - secretName: grafana-general-tls
          hosts:
          - grafana.tav.dev         
      